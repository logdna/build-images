ARG VARIANT_VERSION=buster
FROM buildpack-deps:${VARIANT_VERSION}-curl

# Needs to be in this scope too
ARG VARIANT_VERSION=buster

ARG SCCACHE_BUCKET
ARG SCCACHE_REGION
ARG SCCACHE_ENDPOINT
ARG SCCACHE_SERVER_PORT=4226
ARG SCCACHE_RECACHE

ENV LLVM_MAJOR_VERSION=13
ENV LLVM_VERSION=${LLVM_MAJOR_VERSION}.0.1
ENV VARIANT_VERSION=${VARIANT_VERSION}

ENV CARGO_HOME="/opt/rust/cargo"
ENV RUSTUP_HOME="/opt/rust/rustup"
ENV PATH="${CARGO_HOME}/bin:${PATH}"
COPY llvm-snapshot.gpg.key /llvm-snapshot.gpg.key
COPY .curlrc /root

# Handly arch/platform lookup env vars
ENV amd64=x86_64
ENV arm64=aarch64
ENV x86_64=amd64
ENV aarch64=arm64

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US
ENV TERM xterm

SHELL ["/bin/bash", "-c"]

RUN DEPS="ca-certificates curl file m4 make locales pkg-config xz-utils cmake \
          lsof procps git automake hunspell-en-gb hunspell-tools linux-perf \
          texinfo procps zlib1g-dev clang-${LLVM_MAJOR_VERSION} \
          lld-${LLVM_MAJOR_VERSION} lldb-${LLVM_MAJOR_VERSION}\
          systemd libsystemd-dev patch osslsigncode \
          libssl-dev bzip2 libtool m4 libc6-dev" \
  && apt-get update  > /dev/null \
  && apt-key add /llvm-snapshot.gpg.key \
  && apt-get install -y --no-install-recommends software-properties-common > /dev/null \
  && add-apt-repository "deb http://apt.llvm.org/${VARIANT_VERSION}/ llvm-toolchain-${VARIANT_VERSION}-${LLVM_MAJOR_VERSION} main" \
  && apt-get update > /dev/null \
  && apt-get install -y --no-install-recommends $DEPS > /dev/null \
  && echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
  && locale-gen en_US.UTF-8 \
  && /usr/sbin/update-locale LANG=en_US.UTF-8 \
  && apt-get autoremove -y > /dev/null \
  && apt-get clean > /dev/null \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc

RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/ld.lld lld /usr/bin/ld.lld-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/llvm-ranlib llvm-ranlib /usr/bin/llvm-ranlib-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/llvm-strip llvm-strip /usr/lib/llvm-${LLVM_MAJOR_VERSION}/bin/llvm-strip 100 && \
    update-alternatives --install /usr/bin/llvm-lib llvm-lib /usr/bin/llvm-lib-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/clang-cl clang-cl /usr/bin/clang-${LLVM_MAJOR_VERSION} 100 && \
    update-alternatives --install /usr/bin/lld-link lld-link /usr/bin/lld-link-${LLVM_MAJOR_VERSION} 100

RUN unmunch /usr/share/hunspell/en_GB.dic /usr/share/hunspell/en_GB.aff 2> /dev/null | grep -v "'s" > /dict.txt

################################################################################################
# Add 3rd party tools here
# do not add them at the end or into derived image which is for crossed Rust stuff
################################################################################################

# msitools not avail on buster
RUN if [[ "${VARIANT_VERSION}" != "buster" ]] ; then \
    apt update -y && \
    apt-get install -y --no-install-recommends meson valac-bin valac valac-0.48-vapi libgsf-1-dev bats bison libgcab-dev libgirepository1.0-dev libgcab libgirepository1.0 && \
    git clone --recurse-submodules https://github.com/GNOME/msitools.git && \
    mkdir ./msitools/target && pushd ./msitools/target && \
    meson .. && ninja install && popd && rm -rf ./msitools && ldconfig && wixl --version; \
    apt autoremove -y meson valac-bin valac valac-0.48-vapi bats bison libgcab-dev libgirepository1.0-dev && \
    apt-get clean > /dev/null && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc; \
    fi

###############################################################################################

ARG VERSION="stable"

# Install rust
ENV CARGO_HOME=/opt/rust/cargo
RUN curl -L https://sh.rustup.rs -sSf | \
    sh -s -- -q -y --default-toolchain $VERSION --component clippy rustfmt --profile minimal --no-modify-path && \
    chmod -R a+rw $RUSTUP_HOME $CARGO_HOME

## Set up default cargo env vars for cross compiling
ENV GNU_TRIPLE="${CROSS_COMPILER_TARGET_ARCH}-unknown-linux-gnu"
ENV MUSL_TRIPLE="${CROSS_COMPILER_TARGET_ARCH}-unknown-linux-musl"

# Set up basic musl C configuration for to use clang as the linker driver, llvm-ar, ETC
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=clang
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_AR=llvm-ar
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS="-Clink-args=-fuse-ld=lld \
                                                       -Clink-args=--target=aarch64-unknown-linux-musl"
ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_LINKER=clang
ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_AR=llvm-ar
ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_RUSTFLAGS="-Clink-args=-fuse-ld=lld \
                                                      -Clink-args=--target=x86_64-unknown-linux-musl"
# Teach cargo to use clang as the linker driver
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=clang
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_AR=llvm-ar

ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=clang
ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_AR=llvm-ar

# Set up basic gnu C configuration for to use clang as the linker driver, llvm-ar, ETC
ENV CC_aarch64_unknown_linux_gnu="clang"
ENV CFLAGS_aarch64_unknown_linux_gnu="--target=aarch64-unknown-linux-gnu -fuse-ld=lld -fPIC"
ENV CXX_aarch64_unknown_linux_gnu="clang++"
ENV CXXFLAGS_aarch64_unknown_linux_gnu="--target=aarch64-unknown-linux-gnu -fuse-ld=lld -fPIC"

ENV CC_x86_64_unknown_linux_gnu="clang"
ENV CFLAGS_x86_64_unknown_linux_gnu="--target=x86_64-unknown-linux-gnu -fuse-ld=lld -fPIC"
ENV CXX_x86_64_unknown_linux_gnu="clang++"
ENV CXXFLAGS_x86_64_unknown_linux_gnu="--target=x86_64-unknown-linux-gnu -fuse-ld=lld -fPIC"

CMD ["bash"]
