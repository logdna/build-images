#!/usr/bin/env bash
set -e
TOP=$(dirname "$(readlink -f "$0")")/..
pushd "$TOP"
export DOCKER_BUILDKIT=1
#
#   PLATFORM          ARCH
#
#   linux/amd64       x86_64
#   linux/arm64       aarch64
declare -A platforms=( ["x86_64"]="linux/amd64" ["aarch64"]="linux/arm64")

# Default to the host ARCH
HOST_ARCH="$(uname -m)"

#
# redefine these
#
CROSS_COMPILER_TARGET_ARCHS="x86_64 aarch64"
CROSS_COMPILER_TARGET_ARCHS="${CROSS_COMPILER_TARGET_ARCHS:-$HOST_ARCH}"
PLATFORM=${PLATFORM:-${platforms[$HOST_ARCH]}}
VARIANT_VERSION=${VARIANT_VERSION:-bullseye}


# special case handling for M1s
if [[ $HOST_ARCH == 'arm64' ]]; then
    HOST_ARCH=${HOST_ARCH:-'aarch64'}
else
    HOST_ARCH=${HOST_ARCH:-$HOST_ARCH}
fi

# Put aws creds in file so we can securely use them in docker build
AWS_CREDENTIALS_FILE=${AWS_CREDENTIALS_FILE:-"$HOME/.aws/credentials"}

if [ -n "${AWS_SECRET_ACCESS_KEY}" ] && [ -n "${AWS_ACCESS_KEY_ID}" ]; then
    echo "" > "$PWD/.aws_creds"
    chmod 600 "$PWD/.aws_creds"
    { echo "[default]";
      echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID";
      echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"; } >> "$PWD/.aws_creds";
    aws_secret_arg="--secret id=aws,src=$PWD/.aws_creds"
elif [ -t "${AWS_CREDENTIALS_FILE}" ]; then
    aws_secret_arg="--secret id=aws,src=${AWS_CREDENTIALS_FILE}"
else
    aws_secret_arg=""
fi

time (
echo
echo ===================================================
echo

# shellcheck disable=SC2086
docker build --platform "$PLATFORM" $aws_secret_arg \
             --progress=plain \
             --build-arg "SCCACHE_BUCKET=${SCCACHE_BUCKET}" \
             --build-arg "SCCACHE_REGION=${SCCACHE_REGION}" \
             --build-arg "SCCACHE_ENDPOINT=${SCCACHE_ENDPOINT}" \
             --build-arg "SCCACHE_RECACHE=${SCCACHE_RECACHE}" \
             --build-arg "VARIANT_VERSION=${VARIANT_VERSION}" \
             -t "docker.io/logdna/build-images:rust-${VARIANT_VERSION}-1-stable-base-${HOST_ARCH}" \
             -f rust/debian/Dockerfile.base ${PULL_OPTS} rust/debian
echo
echo ===================================================
echo
for CROSS_COMPILER_TARGET_ARCH in $CROSS_COMPILER_TARGET_ARCHS
do
    # shellcheck disable=SC2086
    docker build --platform "$PLATFORM" $aws_secret_arg \
                --progress=plain \
                --build-arg "SCCACHE_BUCKET=${SCCACHE_BUCKET}" \
                --build-arg "SCCACHE_REGION=${SCCACHE_REGION}" \
                --build-arg "SCCACHE_ENDPOINT=${SCCACHE_ENDPOINT}" \
                --build-arg "CROSS_COMPILER_TARGET_ARCH=${CROSS_COMPILER_TARGET_ARCH}" \
                --build-arg "BASE_IMAGE=docker.io/logdna/build-images:rust-${VARIANT_VERSION}-1-stable-base-${HOST_ARCH}" \
                -t "docker.io/logdna/build-images:rust-${VARIANT_VERSION}-1-stable-${CROSS_COMPILER_TARGET_ARCH}" \
                -f rust/debian/Dockerfile rust/debian
done
echo
echo @@@@@@  SUCCESS  @@@@@@
echo
)
